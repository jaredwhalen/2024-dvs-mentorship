Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
mutate(
largestShare = max(share),
largestGroup = group[which.max(share)],
alt = paste0(
"A bar chart showing the share of homeowners by age group in the ",MSA, " area in 2023. Homeowners ",  tolower(largestGroup), " made up the largest share at ", largestShare, "%."
)
) %>%
ungroup() %>%
select(-largestShare, -largestShare)
batch_data <- ref %>%
select(
Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
mutate(
largestShare = max(share),
largestGroup = group[which.max(share)],
alt = paste0(
"A bar chart showing the share of homeowners by age group in the ",MSA, " area in 2023. Homeowners ",  tolower(largestGroup), " made up the largest share at ", round(largestShare, digits = 1), "%."
)
) %>%
ungroup() %>%
select(-largestShare, -largestShare)
write_sheet(batch_data, ss, sheet="batch data")
batch_data <- ref %>%
select(
Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
mutate(
largestShare = max(share),
largestGroup = group[which.max(share)],
alt = paste0(
"A bar chart showing the share of homeowners by age group in the ",MSA, " area in 2023. Homeowners ",  tolower(largestGroup), " old made up the largest share at ", round(largestShare, digits = 1), "%."
)
) %>%
ungroup() %>%
select(-largestShare, -largestShare)
write_sheet(batch_data, ss, sheet="batch data")
batch_data <- ref %>%
select(
Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
mutate(
largestShare = max(share),
largestGroup = group[which.max(share)],
alt = paste0(
"A bar chart showing the share of homeowners by age group in the ",MSA, " area in 2023. Homeowners ",  tolower(largestGroup), " old made up the largest share at ", round(largestShare, digits = 1), "%."
)
) %>%
ungroup()
batch_data <- ref %>%
select(
Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
mutate(
largestShare = max(share),
largestGroup = group[which.max(share)],
alt = paste0(
"A bar chart showing the share of homeowners by age group in the ",MSA, " area in 2023. Homeowners ",  tolower(largestGroup), " old made up the largest share at ", round(largestShare, digits = 1), "%."
)
) %>%
ungroup() %>%
select(-largestShare, -largestShare)
ref %>%
select(
Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
mutate(
largestShare = max(share),
largestGroup = group[which.max(share)],
alt = paste0(
"A bar chart showing the share of homeowners by age group in the ",MSA, " area in 2023. Homeowners ",  tolower(largestGroup), " old made up the largest share at ", round(largestShare, digits = 1), "%."
)
) %>%
ungroup()
ref %>%
select(
Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
mutate(
largestShare = max(share),
largestGroup = group[which.max(share)]
) %>%
ungroup()
ref %>%
select(
Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
summarise(
largestShare = max(share),
largestGroup = group[which.max(share)]
) %>%
ungroup()
ref %>%
select(
Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
summarise(
largestShare = max(share),
largestGroup = group[which.max(share)]
) %>%
ungroup() %>%
ref %>%
select(
Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
summarise(
largestShare = max(share),
largestGroup = group[which.max(share)]
) %>%
ungroup() %>%
clipr::write_clip()
library(clipr)
ref %>%
select(
Newsletter,
`Preferred name for metro area`,
MSA
) %>%
left_join(raw) %>%
mutate(across(`Under 35 years`:`85 years and over`, ~ . / `Occupied housing units`)) %>%
select(-MSA, -`Occupied housing units`) %>%
pivot_longer(cols = `Under 35 years`:`85 years and over`,
names_to = "group",
values_to = "share") %>%
rename(
series_id = Newsletter,
MSA = `Preferred name for metro area`
) %>%
mutate(share = share * 100) %>%
group_by(series_id) %>%
summarise(
largestShare = max(share),
largestGroup = group[which.max(share)]
) %>%
ungroup() %>%
write_clip()
library(tidycensus)
library(tidyverse)
# Specify the variables for male and female populations
variables <- c(
male_population = "B01001_002",  # Total Male population
female_population = "B01001_026" # Total Female population
)
# Download county-level gender data for the most recent year available
gender_data <- get_acs(
geography = "county",
variables = variables,
survey = "acs5",
year = 2022,  # Adjust the year as needed
output = "wide"
)
# Clean up and view the data
gender_data <- gender_data %>%
select(GEOID, NAME, male_populationE, female_populationE) %>%
rename(
County = NAME,
Male_Population = male_populationE,
Female_Population = female_populationE
)
# Display the first few rows of the dataset
print(head(gender_data))
# Save the data to a CSV file
write.csv(gender_data, "county_gender_data.csv", row.names = FALSE)
## Load necessary packages
library(tidyverse)
## Reading the datasets
election_results <- read_csv("counties-election-results.csv")
setwd(dirname(rstudioapi::getActiveDocumentContext()[['path']]))
## Load necessary packages
library(tidyverse)
## Reading the datasets
election_results <- read_csv("counties-election-results.csv")
gender_data <- read_csv("counties-gender.csv")
## View the first few rows of each dataset
head(election_results)
head(gender_data)
# Filter election data for Presidential votes only
election_results <- election_results %>%
filter(officeName == "President") %>%
select(statePostal, reportingUnitName, fipsCode, last, voteCount, votePct)
# Check for missing values
sum(is.na(election_results))
sum(is.na(gender_data))
# Rename columns for better readability
gender_data <- gender_data %>%
rename(
fipsCode = GEOID,
County = County,
Male = Male_Population,
Female = Female_Population
)
election_results
# Filter election data for Presidential votes only
election_results <- election_results %>%
select(statePostal, reportingUnitName, fipsCode, last, voteCount, votePct)
# Check for missing values
sum(is.na(election_results))
sum(is.na(gender_data))
# Rename columns for better readability
gender_data <- gender_data %>%
rename(
fipsCode = GEOID,
County = County,
Male = Male_Population,
Female = Female_Population
)
View(gender_data)
View(election_results)
setwd(dirname(rstudioapi::getActiveDocumentContext()[['path']]))
## Load necessary packages
library(tidyverse)
cwd()
wd()
getwd()
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()[['path']]))
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()[['path']]))
## Reading the datasets
election_results <- read_csv("counties-election-results.csv")
gender_data <- read_csv("counties-gender.csv")
View(election_results)
View(gender_data)
election_results %>%
glimpse()
election_results %>%
View()
View(election_results)
View(election_results)
gender_data %>%
View()
gender_data %>%
mutate(total = Male_Population + Female_Population)
total_pop <- gender_data %>%
mutate(total = Male_Population + Female_Population)
total_pop
total_pop <- gender_data %>%
mutate(total = Male_Population + Female_Population) %>%
select(GEOID, County, total)
total_pop
total_pop <- gender_data %>%
mutate(total = Male_Population + Female_Population) %>%
select(-Male_Population, -Female_Population)
total_pop
total_pop <- gender_data %>%
mutate(total = Male_Population + Female_Population) %>%
select(Male_Population:Female_Population)
total_pop
total_pop <- gender_data %>%
mutate(total = Male_Population + Female_Population) %>%
select(-Male_Population, -Female_Population)
total_pop
View(total_pop)
election_results
total_pop
left_join(election_results, total_pop, by=c(fipsCode=GEOID))
election_results
left_join(election_results, total_pop, by=c(fipsCode=GEOID))
total_pop
total_pop <- gender_data %>%
mutate(total = Male_Population + Female_Population) %>%
select(-Male_Population, -Female_Population) %>%
rename(fipsCode = GEOID)
total_pop
left_join(election_results, total_pop)
left_join(election_results, total_pop) %>% View()
?left_join
left_join(election_results, total_pop) %>% View()
election_results
election_results %>%
summarise(max = max())
election_results %>%
summarise(max = max(voteCount))
election_results
election_results %>%
group_by(reportingUnitName) %>%
summarise(max = max(voteCount))
election_results %>%
group_by(fipsCode) %>%
summarise(max = max(voteCount))
election_results %>%
group_by(fipsCode) %>%
summarise(max = max(voteCount)) %>%
arrange(desc(max))
election_results %>%
group_by(fipsCode) %>%
summarise(max = max(voteCount)) %>%
arrange(desc(max))
election_results %>%
group_by(reportingUnitName) %>%
summarise(max = max(voteCount)) %>%
arrange(desc(max))
election_results
election_results %>%
group_by(reportingUnitName) %>%
summarise(total_votes = sum(voteCount)) %>%
arrange(desc(total_votes))
election_results %>%
group_by(reportingUnitName) %>%
summarise(total_votes = sum(voteCount)) %>%
arrange(desc(total_votes))
election_results
election_results %>%
group_by(statePostal, reportingUnitName) %>%
summarise(total_votes = sum(voteCount)) %>%
arrange(desc(total_votes))
election_results %>%
group_by(statePostal, reportingUnitName) %>%
summarise(total_votes = sum(voteCount)) %>%
arrange(desc(total_votes))
left_join(election_results, total_pop)
total_pop <- gender_data %>%
mutate(total = Male_Population + Female_Population) %>%
select(-Male_Population, -Female_Population) %>%
rename(fipsCode = GEOID)
total_pop
total_votes <- election_results %>%
group_by(statePostal, reportingUnitName) %>%
summarise(total_votes = sum(voteCount)) %>%
arrange(desc(total_votes))
total_votes
total_pop
left_join(total_votes, total_pop)
election_results
total_votes <- election_results %>%
group_by(statePostal, fipsCode, reportingUnitName) %>%
summarise(total_votes = sum(voteCount)) %>%
arrange(desc(total_votes))
total_votes
total_votes <- election_results %>%
group_by(statePostal, fipsCode, reportingUnitName) %>%
summarise(total_votes = sum(voteCount)) %>%
arrange(desc(total_votes))
total_pop <- gender_data %>%
mutate(total = Male_Population + Female_Population) %>%
select(-Male_Population, -Female_Population) %>%
rename(fipsCode = GEOID)
left_join(total_votes, total_pop)
total_votes <- election_results %>%
group_by(statePostal, fipsCode, reportingUnitName) %>%
summarise(total_county_votes = sum(voteCount)) %>%
arrange(desc(total_votes))
total_pop <- gender_data %>%
mutate(total_county_pop = Male_Population + Female_Population) %>%
select(-Male_Population, -Female_Population) %>%
rename(fipsCode = GEOID)
total_votes
total_pop
left_join(total_votes, total_pop)
merged <- left_join(total_votes, total_pop)
merged
merged
merged %>%
mutate(share = total_county_votes / total_county_pop)
merged %>%
mutate(share = (total_county_votes / total_county_pop) * 100)
options(scipen=999)
merged %>%
mutate(share = (total_county_votes / total_county_pop) * 100)
merged %>%
mutate(share = (total_county_votes / total_county_pop) * 100) %>% View()
merged %>%
mutate(share = (total_county_votes / total_county_pop) * 100) %>%
head()
merged %>%
mutate(share = (total_county_votes / total_county_pop) * 100)
share <- merged %>%
mutate(share = (total_county_votes / total_county_pop) * 100)
share <- merged %>%
mutate(share = (total_county_votes / total_county_pop) * 100)
